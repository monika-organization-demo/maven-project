pipeline
{
agent any
stages
{
  stage ('scm checkout')
   {steps { git branch: 'master', url: 'https://github.com/monika-organization-demo/maven-project' }}

  stage ('execute unit test')
  {steps { withMaven(globalMavenSettingsConfig: '47647b0c-9e58-4cf5-92f3-65b1d462f328', jdk: 'JAVA', maven: 'MVN', mavenSettingsConfig: '81196a3b-651e-4c3b-b090-c747a5367dd8', traceability: true) 
   { sh 'mvn test' } 
  }}

  stage ('code build')
  {steps { withMaven(globalMavenSettingsConfig: '47647b0c-9e58-4cf5-92f3-65b1d462f328', jdk: 'JAVA', maven: 'MVN', mavenSettingsConfig: '81196a3b-651e-4c3b-b090-c747a5367dd8', traceability: true) 
   { sh 'mvn package' } 
  }}

  stage ('create docker image')
  {steps { sh 'docker build -t 040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-mr:latest .' }
  }

  stage ('docker push from jenkins to AWS ECR')
  {steps { withDockerRegistry(credentialsId: 'ecr:us-east-1:aws-credentials', url: 'https://040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-mr') 
     { sh 'docker push 040872219986.dkr.ecr.us-east-1.amazonaws.com/my-ecr-mr:latest' }   
   }}
stage ('deploy to eks-kubernetes from jenkins')
  {steps { withAWS(credentials: 'aws-cred', region: 'us-east-1')
   { sh 'aws eks --region us-east-1 update-kubeconfig --name mr-eks'
     sh 'kubectl apply -f eks-manifest.yaml' }}}

}
}
